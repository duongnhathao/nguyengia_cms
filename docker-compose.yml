# version: '3.4'

# services:

#   #PHP Service
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     working_dir: /var/www/html
#     volumes:
#       - ./:/var/www/html
#     depends_on:
#       - db
#       - redis
#       - laravel_echo_server

#   #Nginx Service
#   webserver:
#     image: nginx:alpine
#     restart: unless-stopped
#     ports:
#       - "${APP_PORT}:80"
#     volumes:
#       - ./:/var/www/html
#       - .docker/nguyengia.conf:/etc/nginx/conf.d/default.conf

#   # DB UI management service
#   adminer:
#     image: adminer
#     restart: unless-stopped
#     ports:
#       - ${ADMINER_PORT}:8080
#     depends_on:
#       - db

#   #MySQL Service
#   db:
#     image: mysql:5.7.22
#     restart: unless-stopped
#     environment:
#       MYSQL_DATABASE: ${DB_DATABASE}
#       MYSQL_USER: ${DB_USERNAME}
#       MYSQL_PASSWORD: ${DB_PASSWORD}
#       MYSQL_ROOT_PASSWORD: rootpass
#     volumes:
#       - .docker/data/db:/var/lib/mysql/

#   laravel_echo_server:
#     build:
#       context: .docker/laravel-echo-server
#       dockerfile: Dockerfile
#     volumes:
#       - .env:/app/.env
#     restart: unless-stopped

#   redis:
#     image: redis:5-alpine
#     volumes:
#       - .docker/data/redis:/data
#     restart: unless-stopped






version: "3.7"
services:
  app:
    build:
      args:
        user: sammy
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: travellist
    container_name: travellist-app
    restart: unless-stopped
    working_dir: /var/www/html/
    volumes:
      - ./:/var/www/html
    networks:
      - travellist

  db:
    image: mysql:5.7
    container_name: travellist-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - .docker/mysql:/var/lib/mysql/
    networks:
      - travellist

  nginx:
    image: nginx:alpine
    container_name: travellist-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www/html
      - .docker/nginx:/etc/nginx/conf.d/
    networks:
      - travellist

networks:
  travellist:
    driver: bridge
